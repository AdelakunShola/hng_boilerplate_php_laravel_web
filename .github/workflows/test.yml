name: Code Quality

on:
  push:
    branches:
      - dev

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
      # Generate a random port number between 1024 and 65535
      - name: Set dynamic POSTGRES_PORT
        run: echo "POSTGRES_PORT=$((RANDOM%65535+1024))" >> $GITHUB_ENV
      
      - name: Display POSTGRES_PORT
        run: echo "Using PostgreSQL port $POSTGRES_PORT"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres        
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - ${{ env.POSTGRES_PORT }}:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      steps:
        - name: Set up PHP
          uses: nanasess/setup-php@v4
          with:
            php-version: '8.2'
            extensions: pgsql, pdo_pgsql, zip, bcmath, apcu
            ini-values: |
              apc.enabled=1
              apc.enable_cli=1
          
        - name: Run PHP Linting
          run: |
            find . -type f -name "*.php" | xargs -n1 php -l
  
        - name: Get Composer cache directory
          id: composer-cache
          run: echo "::set-output name=dir::$(composer config cache-dir)"
  
        - name: Cache Composer dependencies
          uses: actions/cache@v3
          with:
            path: ${{ steps.composer-cache.outputs.dir }}
            key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
            restore-keys: |
              ${{ runner.os }}-composer-
              
        - name: Install PHP dependencies
          run: composer install --no-interaction --prefer-dist --optimize-autoloader
  
        - name: Set environment variables for CI
          run: |
            cp .env.example .env
            echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
            echo "DB_CONNECTION=pgsql" >> .env
            echo "DB_HOST=localhost" >> .env
            echo "DB_PORT=$POSTGRES_PORT" >> .env
            echo "DB_DATABASE=postgres" >> .env
            echo "DB_USERNAME=postgres" >> .env
            echo "DB_PASSWORD=postgres" >> .env
  
        - name: Run database migrations
          run: php artisan migrate --force
  
        - name: Clear all cache
          run: php artisan optimize
  
        - name: Clear configuration cache
          run: php artisan config:clear
  
        - name: Run Laravel tests
          run: |
            php artisan jwt:secret
            php artisan test
