name: Laravel CI DEV

on:
  push:
    branches:
      - dev

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pgsql, pdo_pgsql, zip, bcmath

      - name: Install PostgreSQL if not installed
        run: |
          if ! command -v psql &> /dev/null
          then
            echo "PostgreSQL not found, installing..."
            sudo apt-get update
            sudo apt-get install -y postgresql postgresql-contrib
            sudo service postgresql start

            # Create database and user
            sudo -u postgres psql -c "CREATE DATABASE testing;"
            sudo -u postgres psql -c "CREATE USER myuser WITH ENCRYPTED PASSWORD 'password';"
            sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE mydatabase TO sail;"
          else
            echo "PostgreSQL is already installed."
          fi

      - name: Ensure PostgreSQL is running
        run: |
          if ! pg_isready -q
          then
            echo "PostgreSQL is not running, starting it..."
            sudo service postgresql start
          else
            echo "PostgreSQL is running."
          fi

      - name: Verify PostgreSQL user and database
        run: |
          sudo -u postgres psql -c "\l"  # List databases
          sudo -u postgres psql -c "\du"  # List users

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install PHP dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Set environment variables for CI
        run: |
          cp .env.example .env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=testing" >> .env
          echo "DB_USERNAME=sail" >> .env
          echo "DB_PASSWORD=password" >> .env

      - name: Run database migrations
        run: php artisan migrate --force

      - name: Clear all cache
        run: php artisan optimize

      - name: Clear configuration cache
        run: php artisan config:clear

      - name: Run Laravel tests
        run: |
          php artisan jwt:secret
          php artisan test

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "About to Deploy"
            cd /var/www/langlearnai-be/deployment
            eval $(ssh-agent)
            ssh-add ~/.ssh/id_ecdsa
            git pull origin dev
            composer install
            php artisan migrate --force
